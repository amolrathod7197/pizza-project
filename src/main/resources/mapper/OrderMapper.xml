<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.dao.OrderDao">

    <resultMap type="order" id="result">
        <id property="orderId" column="order_id"/>
        <result property="customerId" column="customer_id"/>
        <result property="address" column="address"/>
        <result property="amount" column="order_amount"/>
        <result property="orderDateTime" column="order_date"/>
        <association property="pizzaList" resultMap="pizzas"/>

    </resultMap>

    <resultMap id="pizzas" type="com.example.demo.response.OrderDetail">
        <result property="pizzaId" column="pizza_id"/>
        <result property="size" column="pizza_size"/>
        <result property="quantity" column="quantity"/>
        <result property="amount" column="cart_amount"/>
    </resultMap>

    <select id="findAll" resultType="order" resultMap="result">
        SELECT orders.order_id,
        orders.customer_id,
        orders.address,
        orders.order_amount,
        orders.order_date,
        cart.pizza_id,
        cart.pizza_size,
        cart.quantity,
        cart.cart_amount
        FROM cart
        INNER JOIN orders
        ON orders.order_id=cart.order_id
        ORDER BY order_id;
    </select>

    <insert id="insertIntoOrders" parameterType="order" useGeneratedKeys="true" keyProperty="orderId">
        INSERT INTO orders(customer_id, order_amount, order_date, address)
        VALUES(#{customerId}, #{amount}, #{orderDateTime}, #{address})
    </insert>

    <insert id="insertIntoCart" parameterType="order">
        INSERT INTO cart(order_id, pizza_id, pizza_size, quantity,cart_amount)
        VALUES
        <foreach collection="pizzaList" item="pizza" separator=",">
            (#{orderId}, #{pizza.pizzaId}, #{pizza.size}, #{pizza.quantity},#{pizza.amount})
        </foreach>
    </insert>

    <update id="updateOrders" parameterType="order">
        UPDATE orders SET
        customer_id = #{customerId},
        order_amount = #{amount},
        order_date = #{orderDateTime},
        address = #{address}
        WHERE order_id = #{orderId}
    </update>

    <delete id="cleanOldCart" parameterType="int">
        DELETE FROM cart WHERE order_id = #{orderId}
    </delete>

    <delete id="deleteById" parameterType="int">
        DELETE orders,cart FROM orders
        INNER JOIN
        cart ON cart.order_id = orders.order_id
        WHERE
        orders.order_id = #{id}
    </delete>

    <select id="findById" parameterType="int"
            resultType="order" resultMap="result">
        SELECT orders.order_id,
        orders.customer_id,
        orders.address,
        orders.order_amount,
        orders.order_date,
        cart.pizza_id,
        cart.pizza_size,
        cart.quantity,
        cart.cart_amount
        FROM cart
        INNER JOIN orders
        ON orders.order_id=cart.order_id
        Where orders.order_id = #{id}
        ORDER BY order_id;
    </select>

    <select id="checkQuantityAndPrice" resultType="map">
        SELECT
        <choose>
            <when test="size == 'REGULAR'">
                price_regular
            </when>
            <when test="size == 'MEDIUM'">
                price_medium
            </when>
            <when test="size == 'LARGE'">
                price_large
            </when>
        </choose>
        as price, available_quantity
        FROM pizza WHERE pizza_id = #{id}
    </select>

    <update id="updateQuantityForItem">
        <foreach collection="pizzaList" item="pizza" separator=";">
            UPDATE pizza SET available_quantity = available_quantity - #{pizza.quantity}
            where pizza_id = #{pizza.pizzaId}
        </foreach>
    </update>

</mapper>
