2023-06-30 11:14:56,698 INFO org.springframework.boot.StartupInfoLogger [main] Starting DemoApplication using Java 1.8.0_202 on TBIN04 with PID 15308 (D:\workspace\DEMO\demo\demo\target\classes started by Administrator in D:\workspace\DEMO\demo\demo)
2023-06-30 11:14:56,714 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.1, Spring v5.3.21
2023-06-30 11:14:56,714 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-06-30 11:14:59,432 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-06-30 11:14:59,432 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-06-30 11:14:59,432 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.64]
2023-06-30 11:14:59,673 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-06-30 11:15:00,971 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-06-30 11:15:01,033 INFO org.springframework.boot.StartupInfoLogger [main] Started DemoApplication in 5.029 seconds (JVM running for 6.959)
2023-06-30 11:15:10,857 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-30 11:15:11,043 INFO com.zaxxer.hikari.HikariDataSource [http-nio-8080-exec-1] HikariPool-1 - Starting...
2023-06-30 11:15:12,238 INFO com.zaxxer.hikari.HikariDataSource [http-nio-8080-exec-1] HikariPool-1 - Start completed.
2023-06-30 11:15:12,245 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] ==>  Preparing: SELECT * FROM pizza WHERE pizza_id = ?
2023-06-30 11:15:12,282 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] ==> Parameters: 4(Integer)
2023-06-30 11:15:12,316 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] <==    Columns: pizza_id, type, name, description, price_regular, price_medium, price_large
2023-06-30 11:15:12,316 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] <==        Row: 4, Veg, Perri-Perri pizza, Veg most selling item, 120, 150, 200
2023-06-30 11:15:12,319 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] <==      Total: 1
2023-06-30 11:15:12,328 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] ==>  Preparing: UPDATE pizza SET name = ?, type = ?, description = ?, price_regular = ?, price_medium = ?, price_large = ? WHERE pizza_id = ?
2023-06-30 11:15:12,330 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] ==> Parameters: Perri-Perri pizza(String), Veg(String), Veg most selling item(String), 120(Integer), 150(Integer), 200(Integer), 4(Integer)
2023-06-30 11:15:12,334 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] <==    Updates: 1
2023-06-30 11:15:27,054 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] ==>  Preparing: SELECT * FROM pizza WHERE pizza_id = ?
2023-06-30 11:15:27,058 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] ==> Parameters: 6(Integer)
2023-06-30 11:15:27,061 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] <==      Total: 0
2023-06-30 11:15:31,697 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] ==>  Preparing: SELECT * FROM pizza WHERE pizza_id = ?
2023-06-30 11:15:31,698 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] ==> Parameters: 7(Integer)
2023-06-30 11:15:31,700 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] <==    Columns: pizza_id, type, name, description, price_regular, price_medium, price_large
2023-06-30 11:15:31,700 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] <==        Row: 7, Veg, corn-cheeze, Veg most selling item, 100.0, 150.0, 200.0
2023-06-30 11:15:31,701 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] <==      Total: 1
2023-06-30 11:15:31,702 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] ==>  Preparing: DELETE FROM pizza WHERE pizza_id = ?
2023-06-30 11:15:31,703 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] ==> Parameters: 7(Integer)
2023-06-30 11:15:31,806 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] <==    Updates: 1
2023-06-30 12:19:44,155 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-06-30 12:19:44,169 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-06-30 12:19:49,905 INFO org.springframework.boot.StartupInfoLogger [main] Starting DemoApplication using Java 1.8.0_202 on TBIN04 with PID 3412 (D:\workspace\DEMO\demo\demo\target\classes started by Administrator in D:\workspace\DEMO\demo\demo)
2023-06-30 12:19:49,910 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.1, Spring v5.3.21
2023-06-30 12:19:49,911 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-06-30 12:19:52,543 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-06-30 12:19:52,545 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-06-30 12:19:52,546 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.64]
2023-06-30 12:19:52,787 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-06-30 12:19:53,878 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-06-30 12:19:53,943 INFO org.springframework.boot.StartupInfoLogger [main] Started DemoApplication in 4.744 seconds (JVM running for 6.051)
2023-06-30 12:20:28,874 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-30 12:20:29,079 INFO com.zaxxer.hikari.HikariDataSource [http-nio-8080-exec-2] HikariPool-1 - Starting...
2023-06-30 12:20:30,197 INFO com.zaxxer.hikari.HikariDataSource [http-nio-8080-exec-2] HikariPool-1 - Start completed.
2023-06-30 12:20:30,205 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] ==>  Preparing: INSERT INTO customers(customer_name, address, phone_number) VALUES(?, ?, ?)
2023-06-30 12:20:30,236 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] ==> Parameters: Amol Rathod(String), Pune(String), 8208881796(Long)
2023-06-30 12:20:30,254 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] <==    Updates: 1
2023-06-30 12:20:49,454 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] ==>  Preparing: SELECT * FROM customers
2023-06-30 12:20:49,454 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] ==> Parameters: 
2023-06-30 12:20:49,464 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] <==    Columns: customer_id, customer_name, address, phone_number
2023-06-30 12:20:49,464 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] <==        Row: 2, Amol Rathod, Pune, 8208881796
2023-06-30 12:20:49,466 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] <==        Row: 3, Amol Rathod, Pune, 8208881796
2023-06-30 12:20:49,467 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] <==      Total: 2
2023-06-30 12:20:49,472 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] ==>  Preparing: SELECT * FROM customers
2023-06-30 12:20:49,473 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] ==> Parameters: 
2023-06-30 12:20:49,475 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] <==    Columns: customer_id, customer_name, address, phone_number
2023-06-30 12:20:49,475 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] <==        Row: 2, Amol Rathod, Pune, 8208881796
2023-06-30 12:20:49,476 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] <==        Row: 3, Amol Rathod, Pune, 8208881796
2023-06-30 12:20:49,476 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] <==      Total: 2
2023-06-30 12:21:10,182 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] ==>  Preparing: SELECT * FROM pizza WHERE pizza_id = ?
2023-06-30 12:21:10,183 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] ==> Parameters: 5(Integer)
2023-06-30 12:21:10,186 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] <==      Total: 0
2023-06-30 12:21:16,698 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] ==>  Preparing: SELECT * FROM pizza
2023-06-30 12:21:16,699 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] ==> Parameters: 
2023-06-30 12:21:16,701 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==    Columns: pizza_id, type, name, description, price_regular, price_medium, price_large
2023-06-30 12:21:16,702 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==        Row: 4, Veg, Perri-Perri pizza, Veg most selling item, 120, 150, 200
2023-06-30 12:21:16,706 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==        Row: 8, Veg, corn-cheeze, Veg most selling item, 100.0, 150.0, 200.0
2023-06-30 12:21:16,706 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==        Row: 9, Veg, corn-cheeze, Veg most selling item, 100.0, 150.0, 200.0
2023-06-30 12:21:16,708 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==        Row: 10, Veg, corn-cheeze, Veg most selling item, 100.0, 150.0, 200.0
2023-06-30 12:21:16,709 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==        Row: 11, Veg, corn-cheeze, Veg most selling item, 100.0, 150.0, 200.0
2023-06-30 12:21:16,711 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==        Row: 12, Veg, corn-cheeze, Veg most selling item, 100.0, 150.0, 200.0
2023-06-30 12:21:16,712 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==        Row: 13, Veg, corn-cheeze, Veg most selling item, 100.0, 150.0, 200.0
2023-06-30 12:21:16,713 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==        Row: 14, Veg, corn-cheeze, Veg most selling item, 100.0, 150.0, 200.0
2023-06-30 12:21:16,715 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==        Row: 15, Veg, corn-cheeze, Veg most selling item, 100.0, 150.0, 200.0
2023-06-30 12:21:16,716 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==        Row: 16, Veg, corn-cheeze, Veg most selling item, 100.0, 150.0, 200.0
2023-06-30 12:21:16,717 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==        Row: 17, Veg, corn-cheeze, Veg most selling item, 100.0, 150.0, 200.0
2023-06-30 12:21:16,718 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==        Row: 18, Veg, corn-cheeze, Veg most selling item, 100.0, 150.0, 200.0
2023-06-30 12:21:16,719 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==        Row: 19, Veg, corn-cheeze, Veg most selling item, 100.0, 150.0, 200.0
2023-06-30 12:21:16,720 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==        Row: 20, Veg, corn-cheeze, Veg most selling item, 100.0, 150.0, 200.0
2023-06-30 12:21:16,721 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==        Row: 21, Veg, corn-cheeze, Veg most selling item, 100.0, 150.0, 200.0
2023-06-30 12:21:16,722 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==        Row: 22, Veg, corn-cheeze, Veg most selling item, 100.0, 150.0, 200.0
2023-06-30 12:21:16,725 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==        Row: 23, Veg, corn-cheeze, Veg most selling item, 100.0, 150.0, 200.0
2023-06-30 12:21:16,726 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==        Row: 24, Veg, corn-cheeze, Veg most selling item, 100.0, 150.0, 200.0
2023-06-30 12:21:16,731 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==        Row: 25, Veg, corn-cheeze, Veg most selling item, 100.0, 150.0, 200.0
2023-06-30 12:21:16,731 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==        Row: 26, Veg, corn-cheeze, Veg most selling item, 100.0, 150.0, 200.0
2023-06-30 12:21:16,736 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==        Row: 27, Veg, corn-cheeze, Veg most selling item, 100.0, 150.0, 200.0
2023-06-30 12:21:16,738 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==        Row: 28, Veg, corn-cheeze, Veg most selling item, 100.0, 150.0, 200.0
2023-06-30 12:21:16,738 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==        Row: 29, Veg, corn-cheeze, Veg most selling item, 100.0, 150.0, 200.0
2023-06-30 12:21:16,739 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==        Row: 30, Veg, corn-cheeze, Veg most selling item, 100.0, 150.0, 200.0
2023-06-30 12:21:16,739 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==        Row: 31, Veg, corn-cheeze, Veg most selling item, 100, 150, 200
2023-06-30 12:21:16,740 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==        Row: 32, Veg, corn-cheeze, Veg most selling item, 100, 150, 200
2023-06-30 12:21:16,741 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==        Row: 33, Veg, corn-cheeze, Veg most selling item, 100, 150, 200
2023-06-30 12:21:16,741 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==        Row: 34, Veg, corn-cheeze, Veg most selling item, 100, 150, 200
2023-06-30 12:21:16,746 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==        Row: 35, Veg, corn-cheeze, Veg most selling item, 100, 150, 200
2023-06-30 12:21:16,747 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==      Total: 29
2023-06-30 12:21:57,253 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-06-30 12:21:57,270 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-06-30 12:22:02,813 INFO org.springframework.boot.StartupInfoLogger [main] Starting DemoApplication using Java 1.8.0_202 on TBIN04 with PID 7508 (D:\workspace\DEMO\demo\demo\target\classes started by Administrator in D:\workspace\DEMO\demo\demo)
2023-06-30 12:22:02,819 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.1, Spring v5.3.21
2023-06-30 12:22:02,820 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-06-30 12:22:05,614 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-06-30 12:22:05,616 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-06-30 12:22:05,616 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.64]
2023-06-30 12:22:05,898 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-06-30 12:22:07,017 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-06-30 12:22:07,076 INFO org.springframework.boot.StartupInfoLogger [main] Started DemoApplication in 5.017 seconds (JVM running for 6.299)
2023-06-30 12:26:47,772 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-30 12:26:47,841 INFO com.zaxxer.hikari.HikariDataSource [http-nio-8080-exec-2] HikariPool-1 - Starting...
2023-06-30 12:26:48,984 INFO com.zaxxer.hikari.HikariDataSource [http-nio-8080-exec-2] HikariPool-1 - Start completed.
2023-06-30 12:26:48,992 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] ==>  Preparing: SELECT * FROM customers
2023-06-30 12:26:49,020 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] ==> Parameters: 
2023-06-30 12:26:49,043 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] <==    Columns: customer_id, customer_name, address, phone_number
2023-06-30 12:26:49,044 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] <==        Row: 2, Amol Rathod, Pune, 8208881796
2023-06-30 12:26:49,050 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] <==        Row: 3, Amol Rathod, Pune, 8208881796
2023-06-30 12:26:49,051 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] <==      Total: 2
2023-06-30 12:27:24,540 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] ==>  Preparing: SELECT * FROM customers WHERE customer_id = ?
2023-06-30 12:27:24,542 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] ==> Parameters: 1(Integer)
2023-06-30 12:27:24,545 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] <==      Total: 0
2023-06-30 12:27:29,144 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] ==>  Preparing: SELECT * FROM customers WHERE customer_id = ?
2023-06-30 12:27:29,145 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] ==> Parameters: 2(Integer)
2023-06-30 12:27:29,147 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] <==    Columns: customer_id, customer_name, address, phone_number
2023-06-30 12:27:29,147 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] <==        Row: 2, Amol Rathod, Pune, 8208881796
2023-06-30 12:27:29,148 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] <==      Total: 1
2023-06-30 12:27:41,224 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] ==>  Preparing: SELECT * FROM customers WHERE customer_id = ?
2023-06-30 12:27:41,225 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] ==> Parameters: 2(Integer)
2023-06-30 12:27:41,227 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==    Columns: customer_id, customer_name, address, phone_number
2023-06-30 12:27:41,229 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==        Row: 2, Amol Rathod, Pune, 8208881796
2023-06-30 12:27:41,230 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==      Total: 1
2023-06-30 12:27:41,231 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] ==>  Preparing: UPDATE customers SET customer_name = ?, address = ?, phone_number = ? WHERE customer_id = ?
2023-06-30 12:27:41,233 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] ==> Parameters: null, null, null, 2(Integer)
2023-06-30 12:27:41,358 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-5] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'customer_name' cannot be null
### The error may exist in file [D:\workspace\DEMO\demo\demo\target\classes\mapper\CustomerMapper.xml]
### The error may involve com.example.demo.dao.CustomerDao.update-Inline
### The error occurred while setting parameters
### SQL: UPDATE customers SET         customer_name = ?,         address = ?,         phone_number = ?         WHERE customer_id = ?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'customer_name' cannot be null
; Column 'customer_name' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'customer_name' cannot be null] with root cause
java.sql.SQLIntegrityConstraintViolationException: Column 'customer_name' cannot be null
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy76.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	at com.sun.proxy.$Proxy61.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:288)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy62.update(Unknown Source)
	at com.example.demo.controller.CustomerController.updateCustomer(CustomerController.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:684)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1787)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2023-06-30 12:28:13,809 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] ==>  Preparing: SELECT * FROM customers WHERE customer_id = ?
2023-06-30 12:28:13,810 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] ==> Parameters: 2(Integer)
2023-06-30 12:28:13,812 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] <==    Columns: customer_id, customer_name, address, phone_number
2023-06-30 12:28:13,812 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] <==        Row: 2, Amol Rathod, Pune, 8208881796
2023-06-30 12:28:13,813 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] <==      Total: 1
2023-06-30 12:28:13,814 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] ==>  Preparing: UPDATE customers SET customer_name = ?, address = ?, phone_number = ? WHERE customer_id = ?
2023-06-30 12:28:13,815 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] ==> Parameters: Amol Rathod(String), Pune-manjari bk(String), 8208881796(Long), 2(Integer)
2023-06-30 12:28:13,824 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] <==    Updates: 1
2023-06-30 12:28:26,623 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-8] ==>  Preparing: SELECT * FROM customers WHERE customer_id = ?
2023-06-30 12:28:26,624 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-8] ==> Parameters: 2(Integer)
2023-06-30 12:28:26,627 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-8] <==    Columns: customer_id, customer_name, address, phone_number
2023-06-30 12:28:26,628 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-8] <==        Row: 2, Amol Rathod, Pune-manjari bk, 8208881796
2023-06-30 12:28:26,629 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-8] <==      Total: 1
2023-06-30 12:28:32,640 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-9] ==>  Preparing: SELECT * FROM customers WHERE customer_id = ?
2023-06-30 12:28:32,641 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-9] ==> Parameters: 2(Integer)
2023-06-30 12:28:32,643 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-9] <==    Columns: customer_id, customer_name, address, phone_number
2023-06-30 12:28:32,643 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-9] <==        Row: 2, Amol Rathod, Pune-manjari bk, 8208881796
2023-06-30 12:28:32,644 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-9] <==      Total: 1
2023-06-30 12:28:33,977 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-10] ==>  Preparing: SELECT * FROM customers WHERE customer_id = ?
2023-06-30 12:28:33,979 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-10] ==> Parameters: 2(Integer)
2023-06-30 12:28:33,980 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-10] <==    Columns: customer_id, customer_name, address, phone_number
2023-06-30 12:28:33,981 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-10] <==        Row: 2, Amol Rathod, Pune-manjari bk, 8208881796
2023-06-30 12:28:33,982 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-10] <==      Total: 1
2023-06-30 12:28:39,124 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] ==>  Preparing: SELECT * FROM customers WHERE customer_id = ?
2023-06-30 12:28:39,125 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] ==> Parameters: 2(Integer)
2023-06-30 12:28:39,126 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] <==    Columns: customer_id, customer_name, address, phone_number
2023-06-30 12:28:39,126 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] <==        Row: 2, Amol Rathod, Pune-manjari bk, 8208881796
2023-06-30 12:28:39,127 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] <==      Total: 1
2023-06-30 12:28:40,488 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] ==>  Preparing: SELECT * FROM customers WHERE customer_id = ?
2023-06-30 12:28:40,489 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] ==> Parameters: 2(Integer)
2023-06-30 12:28:40,492 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] <==    Columns: customer_id, customer_name, address, phone_number
2023-06-30 12:28:40,492 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] <==        Row: 2, Amol Rathod, Pune-manjari bk, 8208881796
2023-06-30 12:28:40,494 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] <==      Total: 1
2023-06-30 12:28:41,348 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] ==>  Preparing: SELECT * FROM customers WHERE customer_id = ?
2023-06-30 12:28:41,349 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] ==> Parameters: 2(Integer)
2023-06-30 12:28:41,351 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] <==    Columns: customer_id, customer_name, address, phone_number
2023-06-30 12:28:41,351 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] <==        Row: 2, Amol Rathod, Pune-manjari bk, 8208881796
2023-06-30 12:28:41,351 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] <==      Total: 1
2023-06-30 12:28:42,124 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] ==>  Preparing: SELECT * FROM customers WHERE customer_id = ?
2023-06-30 12:28:42,124 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] ==> Parameters: 2(Integer)
2023-06-30 12:28:42,126 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] <==    Columns: customer_id, customer_name, address, phone_number
2023-06-30 12:28:42,127 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] <==        Row: 2, Amol Rathod, Pune-manjari bk, 8208881796
2023-06-30 12:28:42,128 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] <==      Total: 1
2023-06-30 12:28:43,007 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] ==>  Preparing: SELECT * FROM customers WHERE customer_id = ?
2023-06-30 12:28:43,009 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] ==> Parameters: 2(Integer)
2023-06-30 12:28:43,011 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==    Columns: customer_id, customer_name, address, phone_number
2023-06-30 12:28:43,013 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==        Row: 2, Amol Rathod, Pune-manjari bk, 8208881796
2023-06-30 12:28:43,014 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==      Total: 1
2023-06-30 12:28:45,927 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] ==>  Preparing: SELECT * FROM customers
2023-06-30 12:28:45,928 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] ==> Parameters: 
2023-06-30 12:28:45,945 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] <==    Columns: customer_id, customer_name, address, phone_number
2023-06-30 12:28:45,946 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] <==        Row: 2, Amol Rathod, Pune-manjari bk, 8208881796
2023-06-30 12:28:45,947 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] <==        Row: 3, Amol Rathod, Pune, 8208881796
2023-06-30 12:28:45,949 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] <==      Total: 2
2023-06-30 12:32:22,885 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-06-30 12:32:22,904 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-06-30 12:32:29,018 INFO org.springframework.boot.StartupInfoLogger [main] Starting DemoApplication using Java 1.8.0_202 on TBIN04 with PID 8840 (D:\workspace\DEMO\demo\demo\target\classes started by Administrator in D:\workspace\DEMO\demo\demo)
2023-06-30 12:32:29,024 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.1, Spring v5.3.21
2023-06-30 12:32:29,025 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-06-30 12:32:31,646 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-06-30 12:32:31,647 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-06-30 12:32:31,647 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.64]
2023-06-30 12:32:31,879 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-06-30 12:32:32,922 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-06-30 12:32:32,981 INFO org.springframework.boot.StartupInfoLogger [main] Started DemoApplication in 4.644 seconds (JVM running for 5.935)
2023-06-30 12:33:02,327 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-30 12:33:02,403 INFO com.zaxxer.hikari.HikariDataSource [http-nio-8080-exec-2] HikariPool-1 - Starting...
2023-06-30 12:33:03,471 INFO com.zaxxer.hikari.HikariDataSource [http-nio-8080-exec-2] HikariPool-1 - Start completed.
2023-06-30 12:33:03,478 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] ==>  Preparing: SELECT * FROM customers WHERE customer_id = ?
2023-06-30 12:33:03,510 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] ==> Parameters: 2(Integer)
2023-06-30 12:33:03,538 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] <==    Columns: customer_id, customer_name, address, phone_number
2023-06-30 12:33:03,538 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] <==        Row: 2, Amol Rathod, Pune-manjari bk, 8208881796
2023-06-30 12:33:03,541 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] <==      Total: 1
2023-06-30 12:33:03,548 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] ==>  Preparing: DELETE FROM customers WHERE customer_id = ?
2023-06-30 12:33:03,549 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] ==> Parameters: 2(Integer)
2023-06-30 12:33:03,559 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] <==    Updates: 1
2023-06-30 12:33:04,939 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] ==>  Preparing: SELECT * FROM customers WHERE customer_id = ?
2023-06-30 12:33:04,940 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] ==> Parameters: 2(Integer)
2023-06-30 12:33:04,942 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] <==      Total: 0
2023-06-30 12:44:57,695 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-06-30 12:44:57,711 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-06-30 12:45:03,647 INFO org.springframework.boot.StartupInfoLogger [main] Starting DemoApplication using Java 1.8.0_202 on TBIN04 with PID 12884 (D:\workspace\DEMO\demo\demo\target\classes started by Administrator in D:\workspace\DEMO\demo\demo)
2023-06-30 12:45:03,651 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.1, Spring v5.3.21
2023-06-30 12:45:03,652 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-06-30 12:45:06,395 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-06-30 12:45:06,396 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-06-30 12:45:06,397 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.64]
2023-06-30 12:45:06,640 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-06-30 12:45:07,759 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-06-30 12:45:07,813 INFO org.springframework.boot.StartupInfoLogger [main] Started DemoApplication in 4.849 seconds (JVM running for 6.26)
2023-06-30 12:46:13,772 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-30 12:46:13,954 INFO com.zaxxer.hikari.HikariDataSource [http-nio-8080-exec-1] HikariPool-1 - Starting...
2023-06-30 12:46:15,105 INFO com.zaxxer.hikari.HikariDataSource [http-nio-8080-exec-1] HikariPool-1 - Start completed.
2023-06-30 12:46:15,114 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] ==>  Preparing: select current_timestamp();
2023-06-30 12:46:15,146 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] ==> Parameters: 
2023-06-30 12:46:15,181 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] <==    Columns: current_timestamp()
2023-06-30 12:46:15,184 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] <==        Row: 2023-06-30 12:46:15
2023-06-30 12:46:15,192 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] <==      Total: 1
2023-06-30 12:46:15,212 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] ==>  Preparing: INSERT INTO orders(customer_id, order_amount, order_date, address) VALUES(?, ?, ?, ?)
2023-06-30 12:46:15,215 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] ==> Parameters: 2(Integer), 0(Integer), 2023-06-30 12:46:15(String), Manjari-pune(String)
2023-06-30 12:46:15,238 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] <==    Updates: 1
2023-06-30 12:46:15,283 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] ==>  Preparing: SELECT FROM pizza WHERE pizza_id = ?
2023-06-30 12:46:15,285 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] ==> Parameters: 4(Integer)
2023-06-30 12:46:15,533 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'FROM pizza WHERE pizza_id = 4' at line 3
### The error may exist in file [D:\workspace\DEMO\demo\demo\target\classes\mapper\OrderMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT                       FROM pizza WHERE pizza_id = ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'FROM pizza WHERE pizza_id = 4' at line 3
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'FROM pizza WHERE pizza_id = 4' at line 3] with root cause
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'FROM pizza WHERE pizza_id = 4' at line 3
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:89)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	at com.sun.proxy.$Proxy61.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:160)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy63.getPrice(Unknown Source)
	at com.example.demo.manager.OrderManager.process(OrderManager.java:22)
	at com.example.demo.controller.OrderController.createOrder(OrderController.java:40)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1787)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2023-06-30 12:46:49,196 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] ==>  Preparing: select current_timestamp();
2023-06-30 12:46:49,196 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] ==> Parameters: 
2023-06-30 12:46:49,198 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] <==    Columns: current_timestamp()
2023-06-30 12:46:49,199 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] <==        Row: 2023-06-30 12:46:49
2023-06-30 12:46:49,200 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] <==      Total: 1
2023-06-30 12:46:49,201 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] ==>  Preparing: INSERT INTO orders(customer_id, order_amount, order_date, address) VALUES(?, ?, ?, ?)
2023-06-30 12:46:49,202 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] ==> Parameters: 2(Integer), 0(Integer), 2023-06-30 12:46:49(String), Manjari-pune(String)
2023-06-30 12:46:49,211 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] <==    Updates: 1
2023-06-30 12:46:49,212 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] ==>  Preparing: SELECT FROM pizza WHERE pizza_id = ?
2023-06-30 12:46:49,213 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] ==> Parameters: 4(Integer)
2023-06-30 12:46:49,215 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-4] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'FROM pizza WHERE pizza_id = 4' at line 3
### The error may exist in file [D:\workspace\DEMO\demo\demo\target\classes\mapper\OrderMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT                       FROM pizza WHERE pizza_id = ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'FROM pizza WHERE pizza_id = 4' at line 3
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'FROM pizza WHERE pizza_id = 4' at line 3] with root cause
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'FROM pizza WHERE pizza_id = 4' at line 3
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:89)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	at com.sun.proxy.$Proxy61.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:160)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy63.getPrice(Unknown Source)
	at com.example.demo.manager.OrderManager.process(OrderManager.java:22)
	at com.example.demo.controller.OrderController.createOrder(OrderController.java:40)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1787)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2023-06-30 12:49:32,397 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] ==>  Preparing: select current_timestamp();
2023-06-30 12:49:32,398 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] ==> Parameters: 
2023-06-30 12:49:32,400 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] <==    Columns: current_timestamp()
2023-06-30 12:49:32,400 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] <==        Row: 2023-06-30 12:49:32
2023-06-30 12:49:32,401 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] <==      Total: 1
2023-06-30 12:49:32,402 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] ==>  Preparing: INSERT INTO orders(customer_id, order_amount, order_date, address) VALUES(?, ?, ?, ?)
2023-06-30 12:49:32,403 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] ==> Parameters: 2(Integer), 0(Integer), 2023-06-30 12:49:32(String), Manjari-pune(String)
2023-06-30 12:49:32,412 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] <==    Updates: 1
2023-06-30 12:49:45,501 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] ==>  Preparing: SELECT FROM pizza WHERE pizza_id = ?
2023-06-30 12:49:45,503 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] ==> Parameters: 4(Integer)
2023-06-30 12:49:45,506 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-6] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'FROM pizza WHERE pizza_id = 4' at line 3
### The error may exist in file [D:\workspace\DEMO\demo\demo\target\classes\mapper\OrderMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT                       FROM pizza WHERE pizza_id = ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'FROM pizza WHERE pizza_id = 4' at line 3
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'FROM pizza WHERE pizza_id = 4' at line 3] with root cause
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'FROM pizza WHERE pizza_id = 4' at line 3
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:89)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	at com.sun.proxy.$Proxy61.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:160)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy63.getPrice(Unknown Source)
	at com.example.demo.manager.OrderManager.process(OrderManager.java:22)
	at com.example.demo.controller.OrderController.createOrder(OrderController.java:40)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1787)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2023-06-30 12:49:54,907 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] ==>  Preparing: select current_timestamp();
2023-06-30 12:49:54,908 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] ==> Parameters: 
2023-06-30 12:49:54,910 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] <==    Columns: current_timestamp()
2023-06-30 12:49:54,911 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] <==        Row: 2023-06-30 12:49:54
2023-06-30 12:49:54,912 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] <==      Total: 1
2023-06-30 12:49:54,912 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] ==>  Preparing: INSERT INTO orders(customer_id, order_amount, order_date, address) VALUES(?, ?, ?, ?)
2023-06-30 12:49:54,913 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] ==> Parameters: 2(Integer), 0(Integer), 2023-06-30 12:49:54(String), Manjari-pune(String)
2023-06-30 12:49:54,921 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] <==    Updates: 1
2023-06-30 12:50:41,542 WARN com.zaxxer.hikari.pool.HikariPool$HouseKeeper [HikariPool-1 housekeeper] HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=56s41ms826µs399ns).
2023-06-30 12:50:41,545 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] ==>  Preparing: SELECT FROM pizza WHERE pizza_id = ?
2023-06-30 12:50:41,546 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] ==> Parameters: 4(Integer)
2023-06-30 12:50:41,549 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-7] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'FROM pizza WHERE pizza_id = 4' at line 3
### The error may exist in file [D:\workspace\DEMO\demo\demo\target\classes\mapper\OrderMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT                       FROM pizza WHERE pizza_id = ?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'FROM pizza WHERE pizza_id = 4' at line 3
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'FROM pizza WHERE pizza_id = 4' at line 3] with root cause
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'FROM pizza WHERE pizza_id = 4' at line 3
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:89)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	at com.sun.proxy.$Proxy61.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:160)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy63.getPrice(Unknown Source)
	at com.example.demo.manager.OrderManager.process(OrderManager.java:22)
	at com.example.demo.controller.OrderController.createOrder(OrderController.java:40)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1787)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2023-06-30 12:50:42,357 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-06-30 12:50:42,373 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-06-30 12:50:48,274 INFO org.springframework.boot.StartupInfoLogger [main] Starting DemoApplication using Java 1.8.0_202 on TBIN04 with PID 13344 (D:\workspace\DEMO\demo\demo\target\classes started by Administrator in D:\workspace\DEMO\demo\demo)
2023-06-30 12:50:48,279 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.1, Spring v5.3.21
2023-06-30 12:50:48,280 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-06-30 12:50:50,978 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-06-30 12:50:50,979 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-06-30 12:50:50,980 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.64]
2023-06-30 12:50:51,191 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-06-30 12:50:52,233 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-06-30 12:50:52,292 INFO org.springframework.boot.StartupInfoLogger [main] Started DemoApplication in 4.723 seconds (JVM running for 6.07)
2023-06-30 12:51:00,516 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-30 12:51:00,706 INFO com.zaxxer.hikari.HikariDataSource [http-nio-8080-exec-1] HikariPool-1 - Starting...
2023-06-30 12:51:01,804 INFO com.zaxxer.hikari.HikariDataSource [http-nio-8080-exec-1] HikariPool-1 - Start completed.
2023-06-30 12:51:01,811 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] ==>  Preparing: select current_timestamp();
2023-06-30 12:51:01,842 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] ==> Parameters: 
2023-06-30 12:51:01,869 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] <==    Columns: current_timestamp()
2023-06-30 12:51:01,872 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] <==        Row: 2023-06-30 12:51:01
2023-06-30 12:51:01,876 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] <==      Total: 1
2023-06-30 12:51:01,887 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] ==>  Preparing: INSERT INTO orders(customer_id, order_amount, order_date, address) VALUES(?, ?, ?, ?)
2023-06-30 12:51:01,890 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] ==> Parameters: 2(Integer), 0(Integer), 2023-06-30 12:51:01(String), Manjari-pune(String)
2023-06-30 12:51:01,901 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] <==    Updates: 1
2023-06-30 12:51:01,941 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] ==>  Preparing: SELECT price_medium FROM pizza WHERE pizza_id = ?
2023-06-30 12:51:01,942 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] ==> Parameters: 4(Integer)
2023-06-30 12:51:01,960 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] <==    Columns: price_medium
2023-06-30 12:51:01,961 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] <==        Row: 150
2023-06-30 12:51:01,966 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] <==      Total: 1
2023-06-30 12:51:01,969 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] ==>  Preparing: INSERT INTO cart(order_id, pizza_id, pizza_size, quantity,cart_amount) VALUES(?, ?, ?, ?,?)
2023-06-30 12:51:01,971 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] ==> Parameters: 52(Integer), 4(Integer), MEDIUM(String), 2(Integer), 300(Integer)
2023-06-30 12:51:01,993 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] <==    Updates: 1
2023-06-30 12:51:01,994 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] ==>  Preparing: SELECT price_regular FROM pizza WHERE pizza_id = ?
2023-06-30 12:51:01,995 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] ==> Parameters: 5(Integer)
2023-06-30 12:51:02,003 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] <==      Total: 0
2023-06-30 12:51:02,015 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.example.demo.manager.OrderManager.process(OrderManager.java:21)
	at com.example.demo.controller.OrderController.createOrder(OrderController.java:40)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1787)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2023-06-30 12:51:46,871 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] ==>  Preparing: select current_timestamp();
2023-06-30 12:51:46,872 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] ==> Parameters: 
2023-06-30 12:51:46,875 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] <==    Columns: current_timestamp()
2023-06-30 12:51:46,875 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] <==        Row: 2023-06-30 12:51:46
2023-06-30 12:51:46,876 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] <==      Total: 1
2023-06-30 12:51:46,877 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] ==>  Preparing: INSERT INTO orders(customer_id, order_amount, order_date, address) VALUES(?, ?, ?, ?)
2023-06-30 12:51:46,878 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] ==> Parameters: 2(Integer), 0(Integer), 2023-06-30 12:51:46(String), Manjari-pune(String)
2023-06-30 12:51:46,887 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] <==    Updates: 1
2023-06-30 12:52:28,017 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] ==>  Preparing: SELECT price_medium FROM pizza WHERE pizza_id = ?
2023-06-30 12:52:28,018 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] ==> Parameters: 4(Integer)
2023-06-30 12:52:28,020 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] <==    Columns: price_medium
2023-06-30 12:52:28,020 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] <==        Row: 150
2023-06-30 12:52:28,021 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] <==      Total: 1
2023-06-30 12:52:31,490 WARN com.zaxxer.hikari.pool.HikariPool$HouseKeeper [HikariPool-1 housekeeper] HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=59s563ms300µs401ns).
2023-06-30 12:52:31,498 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] ==>  Preparing: SELECT price_medium FROM pizza WHERE pizza_id = ?
2023-06-30 12:52:31,501 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] ==> Parameters: 4(Integer)
2023-06-30 12:52:31,508 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] <==    Columns: price_medium
2023-06-30 12:52:31,509 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] <==        Row: 150
2023-06-30 12:52:31,511 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] <==      Total: 1
2023-06-30 12:52:38,933 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] ==>  Preparing: INSERT INTO cart(order_id, pizza_id, pizza_size, quantity,cart_amount) VALUES(?, ?, ?, ?,?)
2023-06-30 12:52:38,940 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] ==> Parameters: 53(Integer), 4(Integer), MEDIUM(String), 2(Integer), 300(Integer)
2023-06-30 12:52:38,960 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] <==    Updates: 1
2023-06-30 12:52:42,671 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] ==>  Preparing: SELECT price_regular FROM pizza WHERE pizza_id = ?
2023-06-30 12:52:42,676 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] ==> Parameters: 5(Integer)
2023-06-30 12:52:42,687 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] <==      Total: 0
2023-06-30 12:52:48,453 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-4] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.example.demo.manager.OrderManager.process(OrderManager.java:21)
	at com.example.demo.controller.OrderController.createOrder(OrderController.java:40)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1787)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2023-06-30 12:53:29,478 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] ==>  Preparing: select current_timestamp();
2023-06-30 12:53:29,480 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] ==> Parameters: 
2023-06-30 12:53:29,482 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] <==    Columns: current_timestamp()
2023-06-30 12:53:29,483 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] <==        Row: 2023-06-30 12:53:29
2023-06-30 12:53:29,484 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] <==      Total: 1
2023-06-30 12:53:29,485 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] ==>  Preparing: INSERT INTO orders(customer_id, order_amount, order_date, address) VALUES(?, ?, ?, ?)
2023-06-30 12:53:29,486 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] ==> Parameters: 2(Integer), 0(Integer), 2023-06-30 12:53:29(String), Manjari-pune(String)
2023-06-30 12:53:29,494 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] <==    Updates: 1
2023-06-30 12:53:37,692 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] ==>  Preparing: SELECT price_medium FROM pizza WHERE pizza_id = ?
2023-06-30 12:53:37,693 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] ==> Parameters: 4(Integer)
2023-06-30 12:53:37,695 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] <==    Columns: price_medium
2023-06-30 12:53:37,695 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] <==        Row: 150
2023-06-30 12:53:37,696 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] <==      Total: 1
2023-06-30 12:53:40,405 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] ==>  Preparing: SELECT price_medium FROM pizza WHERE pizza_id = ?
2023-06-30 12:53:40,406 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] ==> Parameters: 4(Integer)
2023-06-30 12:53:40,408 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] <==    Columns: price_medium
2023-06-30 12:53:40,408 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] <==        Row: 150
2023-06-30 12:53:40,409 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] <==      Total: 1
2023-06-30 12:53:40,409 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] ==>  Preparing: INSERT INTO cart(order_id, pizza_id, pizza_size, quantity,cart_amount) VALUES(?, ?, ?, ?,?)
2023-06-30 12:53:40,411 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] ==> Parameters: 54(Integer), 4(Integer), MEDIUM(String), 2(Integer), 300(Integer)
2023-06-30 12:53:40,418 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] <==    Updates: 1
2023-06-30 12:53:46,642 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] ==>  Preparing: SELECT price_regular FROM pizza WHERE pizza_id = ?
2023-06-30 12:53:46,643 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] ==> Parameters: 5(Integer)
2023-06-30 12:53:46,646 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] <==      Total: 0
2023-06-30 12:54:21,878 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] ==>  Preparing: SELECT price_regular FROM pizza WHERE pizza_id = ?
2023-06-30 12:54:21,878 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] ==> Parameters: 5(Integer)
2023-06-30 12:54:21,880 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] <==      Total: 0
2023-06-30 12:55:38,392 WARN com.zaxxer.hikari.pool.HikariPool$HouseKeeper [HikariPool-1 housekeeper] HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m57s988ms423µs199ns).
2023-06-30 12:55:38,398 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] ==>  Preparing: SELECT price_regular FROM pizza WHERE pizza_id = ?
2023-06-30 12:55:38,400 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] ==> Parameters: 5(Integer)
2023-06-30 12:55:38,402 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] <==      Total: 0
2023-06-30 12:55:38,403 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-6] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.example.demo.manager.OrderManager.process(OrderManager.java:21)
	at com.example.demo.controller.OrderController.createOrder(OrderController.java:40)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1787)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2023-06-30 12:55:45,989 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] ==>  Preparing: select current_timestamp();
2023-06-30 12:55:45,989 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] ==> Parameters: 
2023-06-30 12:55:45,991 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] <==    Columns: current_timestamp()
2023-06-30 12:55:45,991 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] <==        Row: 2023-06-30 12:55:45
2023-06-30 12:55:45,992 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] <==      Total: 1
2023-06-30 12:55:45,993 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] ==>  Preparing: INSERT INTO orders(customer_id, order_amount, order_date, address) VALUES(?, ?, ?, ?)
2023-06-30 12:55:45,993 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] ==> Parameters: 2(Integer), 0(Integer), 2023-06-30 12:55:45(String), Manjari-pune(String)
2023-06-30 12:55:46,000 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] <==    Updates: 1
2023-06-30 12:55:50,328 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] ==>  Preparing: SELECT price_medium FROM pizza WHERE pizza_id = ?
2023-06-30 12:55:50,329 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] ==> Parameters: 4(Integer)
2023-06-30 12:55:50,333 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] <==    Columns: price_medium
2023-06-30 12:55:50,333 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] <==        Row: 150
2023-06-30 12:55:50,335 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] <==      Total: 1
2023-06-30 12:55:50,336 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] ==>  Preparing: INSERT INTO cart(order_id, pizza_id, pizza_size, quantity,cart_amount) VALUES(?, ?, ?, ?,?)
2023-06-30 12:55:50,338 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] ==> Parameters: 55(Integer), 4(Integer), MEDIUM(String), 2(Integer), 300(Integer)
2023-06-30 12:55:50,349 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] <==    Updates: 1
2023-06-30 12:55:50,350 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] ==>  Preparing: SELECT price_regular FROM pizza WHERE pizza_id = ?
2023-06-30 12:55:50,350 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] ==> Parameters: 8(Integer)
2023-06-30 12:55:50,352 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] <==    Columns: price_regular
2023-06-30 12:55:50,353 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] <==        Row: 100.0
2023-06-30 12:55:50,354 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] <==      Total: 1
2023-06-30 12:55:50,356 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] ==>  Preparing: INSERT INTO cart(order_id, pizza_id, pizza_size, quantity,cart_amount) VALUES(?, ?, ?, ?,?)
2023-06-30 12:55:50,357 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] ==> Parameters: 55(Integer), 8(Integer), REGULAR(String), 1(Integer), 100(Integer)
2023-06-30 12:55:50,364 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] <==    Updates: 1
2023-06-30 12:55:50,368 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] ==>  Preparing: UPDATE orders SET order_amount=? WHERE order_id=?
2023-06-30 12:55:50,368 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] ==> Parameters: 400(Integer), 55(Integer)
2023-06-30 12:55:50,374 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] <==    Updates: 1
2023-06-30 12:58:58,976 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-06-30 12:58:58,991 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-06-30 12:59:04,404 INFO org.springframework.boot.StartupInfoLogger [main] Starting DemoApplication using Java 1.8.0_202 on TBIN04 with PID 13940 (D:\workspace\DEMO\demo\demo\target\classes started by Administrator in D:\workspace\DEMO\demo\demo)
2023-06-30 12:59:04,408 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.1, Spring v5.3.21
2023-06-30 12:59:04,410 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-06-30 12:59:07,034 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-06-30 12:59:07,035 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-06-30 12:59:07,035 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.64]
2023-06-30 12:59:07,280 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-06-30 12:59:08,348 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-06-30 12:59:08,407 INFO org.springframework.boot.StartupInfoLogger [main] Started DemoApplication in 4.665 seconds (JVM running for 5.88)
2023-06-30 12:59:11,785 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-30 12:59:11,986 INFO com.zaxxer.hikari.HikariDataSource [http-nio-8080-exec-2] HikariPool-1 - Starting...
2023-06-30 12:59:13,123 INFO com.zaxxer.hikari.HikariDataSource [http-nio-8080-exec-2] HikariPool-1 - Start completed.
2023-06-30 12:59:13,131 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] ==>  Preparing: select current_timestamp();
2023-06-30 12:59:13,159 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] ==> Parameters: 
2023-06-30 12:59:13,182 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] <==    Columns: current_timestamp()
2023-06-30 12:59:13,185 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] <==        Row: 2023-06-30 12:59:13
2023-06-30 12:59:13,188 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] <==      Total: 1
2023-06-30 12:59:13,199 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] ==>  Preparing: INSERT INTO orders(customer_id, order_amount, order_date, address) VALUES(?, ?, ?, ?)
2023-06-30 12:59:13,203 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] ==> Parameters: 2(Integer), 0(Integer), 2023-06-30 12:59:13(String), Manjari-pune(String)
2023-06-30 12:59:13,213 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] <==    Updates: 1
2023-06-30 12:59:13,274 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] ==>  Preparing: SELECT price_medium FROM pizza WHERE pizza_id = ?
2023-06-30 12:59:13,279 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] ==> Parameters: 4(Integer)
2023-06-30 12:59:13,281 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] <==    Columns: price_medium
2023-06-30 12:59:13,282 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] <==        Row: 150
2023-06-30 12:59:13,294 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] <==      Total: 1
2023-06-30 12:59:13,295 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] ==>  Preparing: INSERT INTO cart(order_id, pizza_id, pizza_size, quantity,cart_amount) VALUES(?, ?, ?, ?,?)
2023-06-30 12:59:13,296 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] ==> Parameters: 56(Integer), 4(Integer), MEDIUM(String), 2(Integer), 300(Integer)
2023-06-30 12:59:13,306 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] <==    Updates: 1
2023-06-30 12:59:13,307 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] ==>  Preparing: SELECT price_regular FROM pizza WHERE pizza_id = ?
2023-06-30 12:59:13,314 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] ==> Parameters: 8(Integer)
2023-06-30 12:59:13,318 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] <==    Columns: price_regular
2023-06-30 12:59:13,319 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] <==        Row: 100.0
2023-06-30 12:59:13,320 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] <==      Total: 1
2023-06-30 12:59:13,320 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] ==>  Preparing: INSERT INTO cart(order_id, pizza_id, pizza_size, quantity,cart_amount) VALUES(?, ?, ?, ?,?)
2023-06-30 12:59:13,321 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] ==> Parameters: 56(Integer), 8(Integer), REGULAR(String), 1(Integer), 100(Integer)
2023-06-30 12:59:13,337 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] <==    Updates: 1
2023-06-30 12:59:13,340 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] ==>  Preparing: UPDATE orders SET order_amount=? WHERE order_id=?
2023-06-30 12:59:13,341 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] ==> Parameters: 400(Integer), 56(Integer)
2023-06-30 12:59:13,348 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] <==    Updates: 1
2023-06-30 13:47:51,290 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] ==>  Preparing: select current_timestamp();
2023-06-30 13:47:51,292 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] ==> Parameters: 
2023-06-30 13:47:51,293 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==    Columns: current_timestamp()
2023-06-30 13:47:51,294 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==        Row: 2023-06-30 13:47:51
2023-06-30 13:47:51,294 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==      Total: 1
2023-06-30 13:47:51,295 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] ==>  Preparing: INSERT INTO orders(customer_id, order_amount, order_date, address) VALUES(?, ?, ?, ?)
2023-06-30 13:47:51,296 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] ==> Parameters: 2(Integer), 0(Integer), 2023-06-30 13:47:51(String), Manjari-pune(String)
2023-06-30 13:47:51,306 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==    Updates: 1
2023-06-30 13:47:51,307 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] ==>  Preparing: SELECT price_medium FROM pizza WHERE pizza_id = ?
2023-06-30 13:47:51,308 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] ==> Parameters: 4(Integer)
2023-06-30 13:47:51,309 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==    Columns: price_medium
2023-06-30 13:47:51,310 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==        Row: 150
2023-06-30 13:47:51,310 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==      Total: 1
2023-06-30 13:47:51,311 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] ==>  Preparing: INSERT INTO cart(order_id, pizza_id, pizza_size, quantity,cart_amount) VALUES(?, ?, ?, ?,?)
2023-06-30 13:47:51,311 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] ==> Parameters: 57(Integer), 4(Integer), MEDIUM(String), 2(Integer), 300(Integer)
2023-06-30 13:47:51,318 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==    Updates: 1
2023-06-30 13:47:51,319 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] ==>  Preparing: SELECT price_regular FROM pizza WHERE pizza_id = ?
2023-06-30 13:47:51,320 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] ==> Parameters: 8(Integer)
2023-06-30 13:47:51,322 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==    Columns: price_regular
2023-06-30 13:47:51,322 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==        Row: 100.0
2023-06-30 13:47:51,323 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==      Total: 1
2023-06-30 13:47:51,323 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] ==>  Preparing: INSERT INTO cart(order_id, pizza_id, pizza_size, quantity,cart_amount) VALUES(?, ?, ?, ?,?)
2023-06-30 13:47:51,324 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] ==> Parameters: 57(Integer), 8(Integer), REGULAR(String), 1(Integer), 100(Integer)
2023-06-30 13:47:51,330 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==    Updates: 1
2023-06-30 13:47:51,331 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] ==>  Preparing: UPDATE orders SET order_amount=? WHERE order_id=?
2023-06-30 13:47:51,332 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] ==> Parameters: 400(Integer), 57(Integer)
2023-06-30 13:47:51,339 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==    Updates: 1
2023-06-30 13:47:57,437 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] ==>  Preparing: SELECT * FROM orders
2023-06-30 13:47:57,437 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] ==> Parameters: 
2023-06-30 13:47:57,439 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] <==    Columns: order_id, customer_id, order_amount, order_date, address
2023-06-30 13:47:57,439 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] <==        Row: 45, 2, 350, 2023-06-29 15:50:53, Manjari-pune
2023-06-30 13:47:57,440 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] <==        Row: 46, 2, 350, 2023-06-29 16:12:51, Manjari-pune
2023-06-30 13:47:57,441 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] <==        Row: 47, 2, 0, 2023-06-29 16:51:26, Manjari-pune
2023-06-30 13:47:57,442 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] <==        Row: 48, 2, 0, 2023-06-30 12:46:15, Manjari-pune
2023-06-30 13:47:57,443 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] <==        Row: 49, 2, 0, 2023-06-30 12:46:49, Manjari-pune
2023-06-30 13:47:57,444 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] <==        Row: 50, 2, 0, 2023-06-30 12:49:32, Manjari-pune
2023-06-30 13:47:57,444 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] <==        Row: 51, 2, 0, 2023-06-30 12:49:54, Manjari-pune
2023-06-30 13:47:57,445 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] <==        Row: 52, 2, 0, 2023-06-30 12:51:01, Manjari-pune
2023-06-30 13:47:57,446 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] <==        Row: 53, 2, 0, 2023-06-30 12:51:46, Manjari-pune
2023-06-30 13:47:57,446 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] <==        Row: 54, 2, 0, 2023-06-30 12:53:29, Manjari-pune
2023-06-30 13:47:57,447 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] <==        Row: 55, 2, 400, 2023-06-30 12:55:45, Manjari-pune
2023-06-30 13:47:57,447 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] <==        Row: 56, 2, 400, 2023-06-30 12:59:13, Manjari-pune
2023-06-30 13:47:57,447 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] <==        Row: 57, 2, 400, 2023-06-30 13:47:51, Manjari-pune
2023-06-30 13:47:57,448 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] <==      Total: 13
2023-06-30 13:48:19,450 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] ==>  Preparing: SELECT * FROM customers WHERE customer_id = ?
2023-06-30 13:48:19,452 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] ==> Parameters: 45(Integer)
2023-06-30 13:48:19,455 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] <==      Total: 0
2023-06-30 13:48:28,233 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-8] ==>  Preparing: SELECT * FROM orders
2023-06-30 13:48:28,234 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-8] ==> Parameters: 
2023-06-30 13:48:28,236 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-8] <==    Columns: order_id, customer_id, order_amount, order_date, address
2023-06-30 13:48:28,236 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-8] <==        Row: 45, 2, 350, 2023-06-29 15:50:53, Manjari-pune
2023-06-30 13:48:28,237 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-8] <==        Row: 46, 2, 350, 2023-06-29 16:12:51, Manjari-pune
2023-06-30 13:48:28,238 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-8] <==        Row: 47, 2, 0, 2023-06-29 16:51:26, Manjari-pune
2023-06-30 13:48:28,239 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-8] <==        Row: 48, 2, 0, 2023-06-30 12:46:15, Manjari-pune
2023-06-30 13:48:28,240 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-8] <==        Row: 49, 2, 0, 2023-06-30 12:46:49, Manjari-pune
2023-06-30 13:48:28,240 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-8] <==        Row: 50, 2, 0, 2023-06-30 12:49:32, Manjari-pune
2023-06-30 13:48:28,241 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-8] <==        Row: 51, 2, 0, 2023-06-30 12:49:54, Manjari-pune
2023-06-30 13:48:28,241 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-8] <==        Row: 52, 2, 0, 2023-06-30 12:51:01, Manjari-pune
2023-06-30 13:48:28,242 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-8] <==        Row: 53, 2, 0, 2023-06-30 12:51:46, Manjari-pune
2023-06-30 13:48:28,242 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-8] <==        Row: 54, 2, 0, 2023-06-30 12:53:29, Manjari-pune
2023-06-30 13:48:28,242 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-8] <==        Row: 55, 2, 400, 2023-06-30 12:55:45, Manjari-pune
2023-06-30 13:48:28,243 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-8] <==        Row: 56, 2, 400, 2023-06-30 12:59:13, Manjari-pune
2023-06-30 13:48:28,243 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-8] <==        Row: 57, 2, 400, 2023-06-30 13:47:51, Manjari-pune
2023-06-30 13:48:28,244 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-8] <==      Total: 13
2023-06-30 13:48:40,358 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-9] ==>  Preparing: SELECT * FROM customers WHERE customer_id = ?
2023-06-30 13:48:40,360 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-9] ==> Parameters: 46(Integer)
2023-06-30 13:48:40,361 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-9] <==      Total: 0
2023-06-30 13:52:18,393 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-06-30 13:52:18,405 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-06-30 13:52:22,349 INFO org.springframework.boot.StartupInfoLogger [main] Starting DemoApplication using Java 1.8.0_202 on TBIN04 with PID 16288 (D:\workspace\DEMO\demo\demo\target\classes started by Administrator in D:\workspace\DEMO\demo\demo)
2023-06-30 13:52:22,355 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.1, Spring v5.3.21
2023-06-30 13:52:22,356 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-06-30 13:52:25,118 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-06-30 13:52:25,119 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-06-30 13:52:25,120 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.64]
2023-06-30 13:52:25,384 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-06-30 13:52:26,591 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-06-30 13:52:26,647 INFO org.springframework.boot.StartupInfoLogger [main] Started DemoApplication in 4.98 seconds (JVM running for 6.181)
2023-06-30 13:52:30,419 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-30 13:52:30,510 INFO com.zaxxer.hikari.HikariDataSource [http-nio-8080-exec-1] HikariPool-1 - Starting...
2023-06-30 13:52:31,678 INFO com.zaxxer.hikari.HikariDataSource [http-nio-8080-exec-1] HikariPool-1 - Start completed.
2023-06-30 13:52:31,685 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] ==>  Preparing: SELECT * FROM orders WHERE order_id = ?
2023-06-30 13:52:31,716 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] ==> Parameters: 46(Integer)
2023-06-30 13:52:31,742 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] <==    Columns: order_id, customer_id, order_amount, order_date, address
2023-06-30 13:52:31,743 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] <==        Row: 46, 2, 350, 2023-06-29 16:12:51, Manjari-pune
2023-06-30 13:52:31,746 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] <==      Total: 1
2023-06-30 13:52:55,142 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] ==>  Preparing: SELECT * FROM orders WHERE order_id = ?
2023-06-30 13:52:55,144 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] ==> Parameters: 45(Integer)
2023-06-30 13:52:55,150 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] <==    Columns: order_id, customer_id, order_amount, order_date, address
2023-06-30 13:52:55,151 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] <==        Row: 45, 2, 350, 2023-06-29 15:50:53, Manjari-pune
2023-06-30 13:52:55,152 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] <==      Total: 1
2023-06-30 13:52:55,153 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] ==>  Preparing: DELETE FROM orders WHERE order_id = ?
2023-06-30 13:52:55,154 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] ==> Parameters: 45(Integer)
2023-06-30 13:52:55,163 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] <==    Updates: 1
2023-06-30 13:52:57,103 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] ==>  Preparing: SELECT * FROM orders WHERE order_id = ?
2023-06-30 13:52:57,103 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] ==> Parameters: 45(Integer)
2023-06-30 13:52:57,105 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] <==      Total: 0
2023-06-30 13:53:01,711 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] ==>  Preparing: SELECT * FROM orders WHERE order_id = ?
2023-06-30 13:53:01,712 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] ==> Parameters: 46(Integer)
2023-06-30 13:53:01,713 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==    Columns: order_id, customer_id, order_amount, order_date, address
2023-06-30 13:53:01,714 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==        Row: 46, 2, 350, 2023-06-29 16:12:51, Manjari-pune
2023-06-30 13:53:01,715 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==      Total: 1
2023-06-30 13:53:04,347 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] ==>  Preparing: SELECT * FROM orders WHERE order_id = ?
2023-06-30 13:53:04,348 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] ==> Parameters: 45(Integer)
2023-06-30 13:53:04,349 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] <==      Total: 0
2023-06-30 14:23:51,590 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-06-30 14:23:51,607 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-06-30 14:23:58,766 INFO org.springframework.boot.StartupInfoLogger [main] Starting DemoApplication using Java 1.8.0_202 on TBIN04 with PID 8672 (D:\workspace\DEMO\demo\demo\target\classes started by Administrator in D:\workspace\DEMO\demo\demo)
2023-06-30 14:23:58,771 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.1, Spring v5.3.21
2023-06-30 14:23:58,772 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-06-30 14:24:01,876 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-06-30 14:24:01,878 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-06-30 14:24:01,879 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.64]
2023-06-30 14:24:02,133 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-06-30 14:24:03,641 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-06-30 14:24:03,717 INFO org.springframework.boot.StartupInfoLogger [main] Started DemoApplication in 5.664 seconds (JVM running for 6.998)
2023-06-30 14:29:28,739 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-30 14:29:28,937 INFO com.zaxxer.hikari.HikariDataSource [http-nio-8080-exec-1] HikariPool-1 - Starting...
2023-06-30 14:29:30,170 INFO com.zaxxer.hikari.HikariDataSource [http-nio-8080-exec-1] HikariPool-1 - Start completed.
2023-06-30 14:29:30,178 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] ==>  Preparing: INSERT INTO pizza(name, type, description, price_regular,price_medium,price_large) VALUES(?, ?, ?, ?, ?, ?)
2023-06-30 14:29:30,210 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] ==> Parameters: corn-cheeze(String), Veg(String), Veg most selling item(String), 100(Integer), 150(Integer), 200(Integer)
2023-06-30 14:29:30,263 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] <==    Updates: 1
2023-06-30 14:30:11,131 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] ==>  Preparing: INSERT INTO pizza(name, type, description, price_regular,price_medium,price_large) VALUES(?, ?, ?, ?, ?, ?)
2023-06-30 14:30:11,132 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] ==> Parameters: Chicken-sause(String), Non-Veg(String), Non-Veg most selling item(String), 200(Integer), 250(Integer), 300(Integer)
2023-06-30 14:30:11,140 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] <==    Updates: 1
2023-06-30 14:31:06,856 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] ==>  Preparing: SELECT * FROM pizza
2023-06-30 14:31:06,856 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] ==> Parameters: 
2023-06-30 14:31:06,868 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] <==    Columns: pizza_id, type, name, description, price_regular, price_medium, price_large
2023-06-30 14:31:06,869 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] <==        Row: 1, Veg, corn-cheeze, Veg most selling item, 100, 150, 200
2023-06-30 14:31:06,872 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] <==        Row: 2, Non-Veg, Chicken-sause, Non-Veg most selling item, 200, 250, 300
2023-06-30 14:31:06,873 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] <==      Total: 2
2023-06-30 14:31:23,219 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] ==>  Preparing: INSERT INTO customers(customer_name, address, phone_number) VALUES(?, ?, ?)
2023-06-30 14:31:23,220 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] ==> Parameters: Amol Rathod(String), Pune(String), 8208881796(Long)
2023-06-30 14:31:23,228 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==    Updates: 1
2023-06-30 14:31:28,630 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] ==>  Preparing: SELECT * FROM customers
2023-06-30 14:31:28,631 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] ==> Parameters: 
2023-06-30 14:31:28,633 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] <==    Columns: customer_id, customer_name, address, phone_number
2023-06-30 14:31:28,633 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] <==        Row: 1, Amol Rathod, Pune, 8208881796
2023-06-30 14:31:28,634 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-6] <==      Total: 1
2023-06-30 14:32:10,896 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] ==>  Preparing: select current_timestamp();
2023-06-30 14:32:10,897 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] ==> Parameters: 
2023-06-30 14:32:10,898 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] <==    Columns: current_timestamp()
2023-06-30 14:32:10,900 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] <==        Row: 2023-06-30 14:32:10
2023-06-30 14:32:10,904 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] <==      Total: 1
2023-06-30 14:32:10,905 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] ==>  Preparing: INSERT INTO orders(customer_id, order_amount, order_date, address) VALUES(?, ?, ?, ?)
2023-06-30 14:32:10,905 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] ==> Parameters: 1(Integer), 0(Integer), 2023-06-30 14:32:10(String), Manjari-pune(String)
2023-06-30 14:32:10,912 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] <==    Updates: 1
2023-06-30 14:32:10,935 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] ==>  Preparing: SELECT price_medium FROM pizza WHERE pizza_id = ?
2023-06-30 14:32:10,936 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] ==> Parameters: 1(Integer)
2023-06-30 14:32:10,938 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] <==    Columns: price_medium
2023-06-30 14:32:10,938 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] <==        Row: 150
2023-06-30 14:32:10,939 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] <==      Total: 1
2023-06-30 14:32:10,939 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] ==>  Preparing: INSERT INTO cart(order_id, pizza_id, pizza_size, quantity,cart_amount) VALUES(?, ?, ?, ?,?)
2023-06-30 14:32:10,940 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] ==> Parameters: 1(Integer), 1(Integer), MEDIUM(String), 2(Integer), 300(Integer)
2023-06-30 14:32:10,946 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] <==    Updates: 1
2023-06-30 14:32:10,947 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] ==>  Preparing: SELECT price_regular FROM pizza WHERE pizza_id = ?
2023-06-30 14:32:10,947 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] ==> Parameters: 2(Integer)
2023-06-30 14:32:10,948 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] <==    Columns: price_regular
2023-06-30 14:32:10,949 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] <==        Row: 200
2023-06-30 14:32:10,949 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] <==      Total: 1
2023-06-30 14:32:10,950 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] ==>  Preparing: INSERT INTO cart(order_id, pizza_id, pizza_size, quantity,cart_amount) VALUES(?, ?, ?, ?,?)
2023-06-30 14:32:10,951 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] ==> Parameters: 1(Integer), 2(Integer), REGULAR(String), 1(Integer), 200(Integer)
2023-06-30 14:32:10,958 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] <==    Updates: 1
2023-06-30 14:32:10,961 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] ==>  Preparing: UPDATE orders SET order_amount=? WHERE order_id=?
2023-06-30 14:32:10,961 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] ==> Parameters: 500(Integer), 1(Integer)
2023-06-30 14:32:10,969 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] <==    Updates: 1
2023-06-30 14:36:54,815 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-10] ==>  Preparing: SELECT * FROM orders
2023-06-30 14:36:54,816 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-10] ==> Parameters: 
2023-06-30 14:36:54,818 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-10] <==    Columns: order_id, customer_id, order_amount, order_date, address
2023-06-30 14:36:54,818 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-10] <==        Row: 1, 1, 500, 2023-06-30 14:32:10, Manjari-pune
2023-06-30 14:36:54,819 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-10] <==      Total: 1
2023-06-30 14:37:12,708 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] ==>  Preparing: SELECT * FROM orders
2023-06-30 14:37:12,710 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] ==> Parameters: 
2023-06-30 14:37:12,714 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] <==    Columns: order_id, customer_id, order_amount, order_date, address
2023-06-30 14:37:12,716 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] <==        Row: 1, 1, 500, 2023-06-30 14:32:10, Manjari-pune
2023-06-30 14:37:12,718 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] <==      Total: 1
2023-06-30 14:37:13,856 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] ==>  Preparing: SELECT * FROM orders
2023-06-30 14:37:13,856 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] ==> Parameters: 
2023-06-30 14:37:13,858 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] <==    Columns: order_id, customer_id, order_amount, order_date, address
2023-06-30 14:37:13,859 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] <==        Row: 1, 1, 500, 2023-06-30 14:32:10, Manjari-pune
2023-06-30 14:37:13,860 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] <==      Total: 1
2023-06-30 14:37:14,669 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] ==>  Preparing: SELECT * FROM orders
2023-06-30 14:37:14,670 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] ==> Parameters: 
2023-06-30 14:37:14,671 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] <==    Columns: order_id, customer_id, order_amount, order_date, address
2023-06-30 14:37:14,672 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] <==        Row: 1, 1, 500, 2023-06-30 14:32:10, Manjari-pune
2023-06-30 14:37:14,673 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] <==      Total: 1
2023-06-30 14:37:23,212 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] ==>  Preparing: SELECT * FROM orders WHERE order_id = ?
2023-06-30 14:37:23,214 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] ==> Parameters: 1(Integer)
2023-06-30 14:37:23,215 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] <==    Columns: order_id, customer_id, order_amount, order_date, address
2023-06-30 14:37:23,216 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] <==        Row: 1, 1, 500, 2023-06-30 14:32:10, Manjari-pune
2023-06-30 14:37:23,217 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] <==      Total: 1
2023-06-30 14:39:49,614 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] ==>  Preparing: SELECT * FROM orders
2023-06-30 14:39:49,615 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] ==> Parameters: 
2023-06-30 14:39:49,616 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] <==    Columns: order_id, customer_id, order_amount, order_date, address
2023-06-30 14:39:49,617 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] <==        Row: 1, 1, 500, 2023-06-30 14:32:10, Manjari-pune
2023-06-30 14:39:49,617 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] <==      Total: 1
2023-06-30 14:39:56,746 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-8] ==>  Preparing: SELECT * FROM orders
2023-06-30 14:39:56,747 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-8] ==> Parameters: 
2023-06-30 14:39:56,749 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-8] <==    Columns: order_id, customer_id, order_amount, order_date, address
2023-06-30 14:39:56,749 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-8] <==        Row: 1, 1, 500, 2023-06-30 14:32:10, Manjari-pune
2023-06-30 14:39:56,749 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-8] <==      Total: 1
2023-06-30 14:39:57,778 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-9] ==>  Preparing: SELECT * FROM orders
2023-06-30 14:39:57,779 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-9] ==> Parameters: 
2023-06-30 14:39:57,781 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-9] <==    Columns: order_id, customer_id, order_amount, order_date, address
2023-06-30 14:39:57,782 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-9] <==        Row: 1, 1, 500, 2023-06-30 14:32:10, Manjari-pune
2023-06-30 14:39:57,783 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-9] <==      Total: 1
2023-06-30 14:40:14,079 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-10] ==>  Preparing: SELECT * FROM orders WHERE order_id = ?
2023-06-30 14:40:14,080 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-10] ==> Parameters: 1(Integer)
2023-06-30 14:40:14,082 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-10] <==    Columns: order_id, customer_id, order_amount, order_date, address
2023-06-30 14:40:14,082 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-10] <==        Row: 1, 1, 500, 2023-06-30 14:32:10, Manjari-pune
2023-06-30 14:40:14,083 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-10] <==      Total: 1
2023-06-30 14:40:21,213 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] ==>  Preparing: SELECT * FROM orders
2023-06-30 14:40:21,214 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] ==> Parameters: 
2023-06-30 14:40:21,217 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] <==    Columns: order_id, customer_id, order_amount, order_date, address
2023-06-30 14:40:21,218 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] <==        Row: 1, 1, 500, 2023-06-30 14:32:10, Manjari-pune
2023-06-30 14:40:21,225 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] <==      Total: 1
2023-06-30 14:40:31,076 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] ==>  Preparing: SELECT * FROM orders
2023-06-30 14:40:31,078 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] ==> Parameters: 
2023-06-30 14:40:31,084 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] <==    Columns: order_id, customer_id, order_amount, order_date, address
2023-06-30 14:40:31,085 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] <==        Row: 1, 1, 500, 2023-06-30 14:32:10, Manjari-pune
2023-06-30 14:40:31,086 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] <==      Total: 1
2023-06-30 14:40:36,786 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] ==>  Preparing: SELECT * FROM orders WHERE order_id = ?
2023-06-30 14:40:36,787 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] ==> Parameters: 1(Integer)
2023-06-30 14:40:36,789 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] <==    Columns: order_id, customer_id, order_amount, order_date, address
2023-06-30 14:40:36,789 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] <==        Row: 1, 1, 500, 2023-06-30 14:32:10, Manjari-pune
2023-06-30 14:40:36,790 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] <==      Total: 1
2023-06-30 14:46:41,591 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] ==>  Preparing: SELECT * FROM orders WHERE order_id = ?
2023-06-30 14:46:41,592 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] ==> Parameters: 1(Integer)
2023-06-30 14:46:41,594 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==    Columns: order_id, customer_id, order_amount, order_date, address
2023-06-30 14:46:41,594 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==        Row: 1, 1, 500, 2023-06-30 14:32:10, Manjari-pune
2023-06-30 14:46:41,595 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==      Total: 1
2023-06-30 14:46:41,602 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-5] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.example.demo.dao.OrderDao.update] with root cause
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.example.demo.dao.OrderDao.update
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:235)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:53)
	at org.apache.ibatis.binding.MapperProxy.lambda$cachedInvoker$0(MapperProxy.java:115)
	at java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1660)
	at org.apache.ibatis.binding.MapperProxy.cachedInvoker(MapperProxy.java:102)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy63.update(Unknown Source)
	at com.example.demo.controller.OrderController.updateOrder(OrderController.java:64)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:684)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1787)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2023-06-30 14:49:23,726 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-06-30 14:49:23,742 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-06-30 14:49:29,347 INFO org.springframework.boot.StartupInfoLogger [main] Starting DemoApplication using Java 1.8.0_202 on TBIN04 with PID 9536 (D:\workspace\DEMO\demo\demo\target\classes started by Administrator in D:\workspace\DEMO\demo\demo)
2023-06-30 14:49:29,354 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.1, Spring v5.3.21
2023-06-30 14:49:29,356 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-06-30 14:49:31,922 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-06-30 14:49:31,923 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-06-30 14:49:31,924 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.64]
2023-06-30 14:49:32,130 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-06-30 14:49:33,216 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-06-30 14:49:33,270 INFO org.springframework.boot.StartupInfoLogger [main] Started DemoApplication in 4.611 seconds (JVM running for 5.772)
2023-06-30 14:49:51,095 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-30 14:49:51,281 INFO com.zaxxer.hikari.HikariDataSource [http-nio-8080-exec-1] HikariPool-1 - Starting...
2023-06-30 14:49:52,390 INFO com.zaxxer.hikari.HikariDataSource [http-nio-8080-exec-1] HikariPool-1 - Start completed.
2023-06-30 14:49:52,401 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] ==>  Preparing: SELECT * FROM orders WHERE order_id = ?
2023-06-30 14:49:52,434 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] ==> Parameters: 1(Integer)
2023-06-30 14:49:52,463 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] <==    Columns: order_id, customer_id, order_amount, order_date, address
2023-06-30 14:49:52,464 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] <==        Row: 1, 1, 500, 2023-06-30 14:32:10, Manjari-pune
2023-06-30 14:49:52,466 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] <==      Total: 1
2023-06-30 14:49:52,476 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] ==>  Preparing: select current_timestamp();
2023-06-30 14:49:52,476 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] ==> Parameters: 
2023-06-30 14:49:52,478 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] <==    Columns: current_timestamp()
2023-06-30 14:49:52,480 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] <==        Row: 2023-06-30 14:49:52
2023-06-30 14:49:52,483 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] <==      Total: 1
2023-06-30 14:49:52,484 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] ==>  Preparing: UPDATE orders SET customer_id = ?, order_amount = ?, order_date = ?, address = ? WHERE order_id = ? and pizza_id = ?
2023-06-30 14:49:52,492 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'order_Id' in 'class com.example.demo.model.Order'] with root cause
org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'order_Id' in 'class com.example.demo.model.Order'
	at org.apache.ibatis.reflection.Reflector.getGetInvoker(Reflector.java:374)
	at org.apache.ibatis.reflection.MetaClass.getGetInvoker(MetaClass.java:164)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.getBeanProperty(BeanWrapper.java:162)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.get(BeanWrapper.java:49)
	at org.apache.ibatis.reflection.MetaObject.getValue(MetaObject.java:122)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:79)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:94)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:88)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	at com.sun.proxy.$Proxy61.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:288)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy63.updateOrders(Unknown Source)
	at com.example.demo.manager.OrderManager.updateOrder(OrderManager.java:53)
	at com.example.demo.controller.OrderController.updateOrder(OrderController.java:63)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:684)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1787)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2023-06-30 14:51:15,983 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-06-30 14:51:15,998 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-06-30 14:51:19,993 INFO org.springframework.boot.StartupInfoLogger [main] Starting DemoApplication using Java 1.8.0_202 on TBIN04 with PID 15868 (D:\workspace\DEMO\demo\demo\target\classes started by Administrator in D:\workspace\DEMO\demo\demo)
2023-06-30 14:51:19,999 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.1, Spring v5.3.21
2023-06-30 14:51:20,000 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-06-30 14:51:22,589 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-06-30 14:51:22,590 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-06-30 14:51:22,591 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.64]
2023-06-30 14:51:22,787 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-06-30 14:51:23,852 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-06-30 14:51:23,909 INFO org.springframework.boot.StartupInfoLogger [main] Started DemoApplication in 4.602 seconds (JVM running for 5.78)
2023-06-30 14:51:37,659 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-30 14:51:37,848 INFO com.zaxxer.hikari.HikariDataSource [http-nio-8080-exec-2] HikariPool-1 - Starting...
2023-06-30 14:51:38,964 INFO com.zaxxer.hikari.HikariDataSource [http-nio-8080-exec-2] HikariPool-1 - Start completed.
2023-06-30 14:51:38,971 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] ==>  Preparing: SELECT * FROM orders WHERE order_id = ?
2023-06-30 14:51:39,001 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] ==> Parameters: 1(Integer)
2023-06-30 14:51:39,030 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] <==    Columns: order_id, customer_id, order_amount, order_date, address
2023-06-30 14:51:39,031 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] <==        Row: 1, 1, 500, 2023-06-30 14:32:10, Manjari-pune
2023-06-30 14:51:39,037 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] <==      Total: 1
2023-06-30 14:51:39,048 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] ==>  Preparing: select current_timestamp();
2023-06-30 14:51:39,049 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] ==> Parameters: 
2023-06-30 14:51:39,050 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] <==    Columns: current_timestamp()
2023-06-30 14:51:39,052 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] <==        Row: 2023-06-30 14:51:39
2023-06-30 14:51:39,055 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] <==      Total: 1
2023-06-30 14:51:39,056 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-2] ==>  Preparing: UPDATE orders SET customer_id = ?, order_amount = ?, order_date = ?, address = ? WHERE order_id = ? and pizza_id = ?
2023-06-30 14:51:39,064 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-2] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'pizzaId' in 'class com.example.demo.model.Order'] with root cause
org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'pizzaId' in 'class com.example.demo.model.Order'
	at org.apache.ibatis.reflection.Reflector.getGetInvoker(Reflector.java:374)
	at org.apache.ibatis.reflection.MetaClass.getGetInvoker(MetaClass.java:164)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.getBeanProperty(BeanWrapper.java:162)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.get(BeanWrapper.java:49)
	at org.apache.ibatis.reflection.MetaObject.getValue(MetaObject.java:122)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:79)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:94)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:88)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	at com.sun.proxy.$Proxy61.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:288)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy63.updateOrders(Unknown Source)
	at com.example.demo.manager.OrderManager.updateOrder(OrderManager.java:53)
	at com.example.demo.controller.OrderController.updateOrder(OrderController.java:63)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:684)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1787)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2023-06-30 16:46:15,410 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-06-30 16:46:15,426 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-06-30 16:46:24,725 INFO org.springframework.boot.StartupInfoLogger [main] Starting DemoApplication using Java 1.8.0_202 on TBIN04 with PID 17724 (D:\workspace\DEMO\demo\demo\target\classes started by Administrator in D:\workspace\DEMO\demo\demo)
2023-06-30 16:46:24,735 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.1, Spring v5.3.21
2023-06-30 16:46:24,737 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-06-30 16:46:28,255 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-06-30 16:46:28,256 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-06-30 16:46:28,256 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.64]
2023-06-30 16:46:28,542 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-06-30 16:46:29,961 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-06-30 16:46:30,058 INFO org.springframework.boot.StartupInfoLogger [main] Started DemoApplication in 6.313 seconds (JVM running for 7.861)
2023-06-30 16:46:39,786 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-30 16:46:40,105 INFO com.zaxxer.hikari.HikariDataSource [http-nio-8080-exec-1] HikariPool-1 - Starting...
2023-06-30 16:46:42,360 INFO com.zaxxer.hikari.HikariDataSource [http-nio-8080-exec-1] HikariPool-1 - Start completed.
2023-06-30 16:46:42,371 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] ==>  Preparing: SELECT * FROM orders WHERE order_id = ?
2023-06-30 16:46:42,419 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] ==> Parameters: 1(Integer)
2023-06-30 16:46:42,468 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] <==    Columns: order_id, customer_id, order_amount, order_date, address
2023-06-30 16:46:42,468 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] <==        Row: 1, 1, 500, 2023-06-30 14:32:10, Manjari-pune
2023-06-30 16:46:42,474 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] <==      Total: 1
2023-06-30 16:46:42,503 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] ==>  Preparing: select current_timestamp();
2023-06-30 16:46:42,511 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] ==> Parameters: 
2023-06-30 16:46:42,515 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] <==    Columns: current_timestamp()
2023-06-30 16:46:42,518 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] <==        Row: 2023-06-30 16:46:42
2023-06-30 16:46:42,523 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] <==      Total: 1
2023-06-30 16:46:42,525 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] ==>  Preparing: UPDATE orders SET customer_id = ?, order_amount = ?, order_date = ?, address = ? WHERE order_id = ?
2023-06-30 16:46:42,527 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] ==> Parameters: 1(Integer), 0(Integer), 2023-06-30 16:46:42(String), Manjari-pune(String), 1(Integer)
2023-06-30 16:46:42,552 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] <==    Updates: 1
2023-06-30 16:46:42,734 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] ==>  Preparing: SELECT price_medium FROM pizza WHERE pizza_id = ?
2023-06-30 16:46:42,736 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] ==> Parameters: 1(Integer)
2023-06-30 16:46:42,756 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] <==    Columns: price_medium
2023-06-30 16:46:42,758 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] <==        Row: 150
2023-06-30 16:46:42,762 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] <==      Total: 1
2023-06-30 16:46:42,767 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] ==>  Preparing: DELETE FROM cart WHERE order_id = ?
2023-06-30 16:46:42,769 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] ==> Parameters: 1(Integer)
2023-06-30 16:46:42,792 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] <==    Updates: 2
2023-06-30 16:46:42,793 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] ==>  Preparing: INSERT INTO cart(order_id, pizza_id, pizza_size, quantity,cart_amount) VALUES(?, ?, ?, ?,?)
2023-06-30 16:46:42,795 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] ==> Parameters: 1(Integer), 1(Integer), MEDIUM(String), 2(Integer), 300(Integer)
2023-06-30 16:46:42,818 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] <==    Updates: 1
2023-06-30 16:46:42,819 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] ==>  Preparing: SELECT price_regular FROM pizza WHERE pizza_id = ?
2023-06-30 16:46:42,821 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] ==> Parameters: 2(Integer)
2023-06-30 16:46:42,824 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] <==    Columns: price_regular
2023-06-30 16:46:42,824 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] <==        Row: 200
2023-06-30 16:46:42,826 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] <==      Total: 1
2023-06-30 16:46:42,827 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] ==>  Preparing: DELETE FROM cart WHERE order_id = ?
2023-06-30 16:46:42,829 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] ==> Parameters: 1(Integer)
2023-06-30 16:46:42,839 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] <==    Updates: 1
2023-06-30 16:46:42,840 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] ==>  Preparing: INSERT INTO cart(order_id, pizza_id, pizza_size, quantity,cart_amount) VALUES(?, ?, ?, ?,?)
2023-06-30 16:46:42,842 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] ==> Parameters: 1(Integer), 2(Integer), REGULAR(String), 3(Integer), 600(Integer)
2023-06-30 16:46:42,855 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] <==    Updates: 1
2023-06-30 16:46:42,859 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] ==>  Preparing: UPDATE orders SET order_amount=? WHERE order_id=?
2023-06-30 16:46:42,860 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] ==> Parameters: 900(Integer), 1(Integer)
2023-06-30 16:46:42,876 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-1] <==    Updates: 1
2023-06-30 16:47:56,607 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] ==>  Preparing: SELECT * FROM orders WHERE order_id = ?
2023-06-30 16:47:56,609 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] ==> Parameters: 1(Integer)
2023-06-30 16:47:56,611 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==    Columns: order_id, customer_id, order_amount, order_date, address
2023-06-30 16:47:56,612 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==        Row: 1, 1, 900, 2023-06-30 16:46:42, Manjari-pune
2023-06-30 16:47:56,614 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==      Total: 1
2023-06-30 16:47:56,614 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] ==>  Preparing: select current_timestamp();
2023-06-30 16:47:56,615 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] ==> Parameters: 
2023-06-30 16:47:56,617 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==    Columns: current_timestamp()
2023-06-30 16:47:56,618 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==        Row: 2023-06-30 16:47:56
2023-06-30 16:47:56,619 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==      Total: 1
2023-06-30 16:47:56,621 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] ==>  Preparing: UPDATE orders SET customer_id = ?, order_amount = ?, order_date = ?, address = ? WHERE order_id = ?
2023-06-30 16:47:56,622 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] ==> Parameters: 1(Integer), 0(Integer), 2023-06-30 16:47:56(String), Manjari-pune(String), 1(Integer)
2023-06-30 16:47:56,632 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==    Updates: 1
2023-06-30 16:47:56,633 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] ==>  Preparing: SELECT price_medium FROM pizza WHERE pizza_id = ?
2023-06-30 16:47:56,635 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] ==> Parameters: 1(Integer)
2023-06-30 16:47:56,638 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==    Columns: price_medium
2023-06-30 16:47:56,638 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==        Row: 150
2023-06-30 16:47:56,639 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==      Total: 1
2023-06-30 16:47:56,641 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] ==>  Preparing: DELETE FROM cart WHERE order_id = ?
2023-06-30 16:47:56,642 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] ==> Parameters: 1(Integer)
2023-06-30 16:47:56,651 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==    Updates: 1
2023-06-30 16:47:56,651 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] ==>  Preparing: INSERT INTO cart(order_id, pizza_id, pizza_size, quantity,cart_amount) VALUES(?, ?, ?, ?,?)
2023-06-30 16:47:56,654 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] ==> Parameters: 1(Integer), 1(Integer), MEDIUM(String), 2(Integer), 300(Integer)
2023-06-30 16:47:56,662 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==    Updates: 1
2023-06-30 16:47:56,662 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] ==>  Preparing: SELECT price_regular FROM pizza WHERE pizza_id = ?
2023-06-30 16:47:56,663 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] ==> Parameters: 2(Integer)
2023-06-30 16:47:56,665 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==    Columns: price_regular
2023-06-30 16:47:56,666 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==        Row: 200
2023-06-30 16:47:56,667 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==      Total: 1
2023-06-30 16:47:56,668 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] ==>  Preparing: DELETE FROM cart WHERE order_id = ?
2023-06-30 16:47:56,670 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] ==> Parameters: 1(Integer)
2023-06-30 16:47:56,676 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==    Updates: 1
2023-06-30 16:47:56,677 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] ==>  Preparing: INSERT INTO cart(order_id, pizza_id, pizza_size, quantity,cart_amount) VALUES(?, ?, ?, ?,?)
2023-06-30 16:47:56,678 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] ==> Parameters: 1(Integer), 2(Integer), REGULAR(String), 3(Integer), 600(Integer)
2023-06-30 16:47:56,687 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==    Updates: 1
2023-06-30 16:47:56,688 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] ==>  Preparing: UPDATE orders SET order_amount=? WHERE order_id=?
2023-06-30 16:47:56,688 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] ==> Parameters: 900(Integer), 1(Integer)
2023-06-30 16:47:56,695 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==    Updates: 1
2023-06-30 16:54:48,622 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-06-30 16:54:48,698 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-06-30 16:54:56,724 INFO org.springframework.boot.StartupInfoLogger [main] Starting DemoApplication using Java 1.8.0_202 on TBIN04 with PID 9268 (D:\workspace\DEMO\demo\demo\target\classes started by Administrator in D:\workspace\DEMO\demo\demo)
2023-06-30 16:54:56,731 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.1, Spring v5.3.21
2023-06-30 16:54:56,733 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-06-30 16:54:59,773 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-06-30 16:54:59,775 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-06-30 16:54:59,775 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.64]
2023-06-30 16:55:00,114 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-06-30 16:55:01,501 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-06-30 16:55:01,567 INFO org.springframework.boot.StartupInfoLogger [main] Started DemoApplication in 5.564 seconds (JVM running for 6.998)
2023-06-30 16:55:50,960 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-3] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-30 16:55:51,394 INFO com.zaxxer.hikari.HikariDataSource [http-nio-8080-exec-3] HikariPool-1 - Starting...
2023-06-30 16:55:53,674 INFO com.zaxxer.hikari.HikariDataSource [http-nio-8080-exec-3] HikariPool-1 - Start completed.
2023-06-30 16:55:53,689 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] ==>  Preparing: SELECT * FROM orders WHERE order_id = ?
2023-06-30 16:55:53,753 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] ==> Parameters: 1(Integer)
2023-06-30 16:55:53,826 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] <==    Columns: order_id, customer_id, order_amount, order_date, address
2023-06-30 16:55:53,830 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] <==        Row: 1, 1, 900, 2023-06-30 16:47:56, Manjari-pune
2023-06-30 16:55:53,838 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] <==      Total: 1
2023-06-30 16:55:53,879 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] ==>  Preparing: select current_timestamp();
2023-06-30 16:55:53,880 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] ==> Parameters: 
2023-06-30 16:55:53,903 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] <==    Columns: current_timestamp()
2023-06-30 16:55:53,947 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] <==        Row: 2023-06-30 16:55:53
2023-06-30 16:55:53,964 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] <==      Total: 1
2023-06-30 16:55:53,966 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] ==>  Preparing: UPDATE orders SET customer_id = ?, order_amount = ?, order_date = ?, address = ? WHERE order_id = ?
2023-06-30 16:55:53,970 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] ==> Parameters: 1(Integer), 0(Integer), 2023-06-30 16:55:53(String), Manjari-pune(String), 1(Integer)
2023-06-30 16:55:54,043 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] <==    Updates: 1
2023-06-30 16:55:54,044 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] ==>  Preparing: DELETE FROM cart WHERE order_id = ?
2023-06-30 16:55:54,045 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] ==> Parameters: 1(Integer)
2023-06-30 16:55:54,113 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] <==    Updates: 1
2023-06-30 16:55:54,172 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] ==>  Preparing: SELECT price_medium FROM pizza WHERE pizza_id = ?
2023-06-30 16:55:54,182 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] ==> Parameters: 1(Integer)
2023-06-30 16:55:54,188 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] <==    Columns: price_medium
2023-06-30 16:55:54,188 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] <==        Row: 150
2023-06-30 16:55:54,190 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] <==      Total: 1
2023-06-30 16:55:54,192 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] ==>  Preparing: INSERT INTO cart(order_id, pizza_id, pizza_size, quantity,cart_amount) VALUES(?, ?, ?, ?,?)
2023-06-30 16:55:54,194 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] ==> Parameters: 1(Integer), 1(Integer), MEDIUM(String), 2(Integer), 300(Integer)
2023-06-30 16:55:54,272 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] <==    Updates: 1
2023-06-30 16:55:54,275 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] ==>  Preparing: SELECT price_regular FROM pizza WHERE pizza_id = ?
2023-06-30 16:55:54,277 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] ==> Parameters: 2(Integer)
2023-06-30 16:55:54,283 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] <==    Columns: price_regular
2023-06-30 16:55:54,285 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] <==        Row: 200
2023-06-30 16:55:54,289 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] <==      Total: 1
2023-06-30 16:55:54,291 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] ==>  Preparing: INSERT INTO cart(order_id, pizza_id, pizza_size, quantity,cart_amount) VALUES(?, ?, ?, ?,?)
2023-06-30 16:55:54,292 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] ==> Parameters: 1(Integer), 2(Integer), REGULAR(String), 3(Integer), 600(Integer)
2023-06-30 16:55:54,330 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] <==    Updates: 1
2023-06-30 16:55:54,338 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] ==>  Preparing: UPDATE orders SET order_amount=? WHERE order_id=?
2023-06-30 16:55:54,341 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] ==> Parameters: 900(Integer), 1(Integer)
2023-06-30 16:55:54,381 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-3] <==    Updates: 1
2023-06-30 16:58:19,605 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] ==>  Preparing: SELECT * FROM orders WHERE order_id = ?
2023-06-30 16:58:19,605 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] ==> Parameters: 1(Integer)
2023-06-30 16:58:19,607 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] <==    Columns: order_id, customer_id, order_amount, order_date, address
2023-06-30 16:58:19,608 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] <==        Row: 1, 1, 900, 2023-06-30 16:55:53, Manjari-pune
2023-06-30 16:58:19,609 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-4] <==      Total: 1
2023-06-30 16:58:24,846 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] ==>  Preparing: SELECT * FROM orders
2023-06-30 16:58:24,847 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] ==> Parameters: 
2023-06-30 16:58:24,849 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==    Columns: order_id, customer_id, order_amount, order_date, address
2023-06-30 16:58:24,850 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==        Row: 1, 1, 900, 2023-06-30 16:55:53, Manjari-pune
2023-06-30 16:58:24,852 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-5] <==      Total: 1
2023-06-30 16:59:35,339 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] ==>  Preparing: select current_timestamp();
2023-06-30 16:59:35,339 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] ==> Parameters: 
2023-06-30 16:59:35,342 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] <==    Columns: current_timestamp()
2023-06-30 16:59:35,342 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] <==        Row: 2023-06-30 16:59:35
2023-06-30 16:59:35,343 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] <==      Total: 1
2023-06-30 16:59:35,345 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] ==>  Preparing: INSERT INTO orders(customer_id, order_amount, order_date, address) VALUES(?, ?, ?, ?)
2023-06-30 16:59:35,346 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] ==> Parameters: 1(Integer), 0(Integer), 2023-06-30 16:59:35(String), Manjari-pune(String)
2023-06-30 16:59:35,354 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] <==    Updates: 1
2023-06-30 16:59:35,360 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] ==>  Preparing: SELECT price_medium FROM pizza WHERE pizza_id = ?
2023-06-30 16:59:35,361 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] ==> Parameters: 1(Integer)
2023-06-30 16:59:35,363 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] <==    Columns: price_medium
2023-06-30 16:59:35,364 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] <==        Row: 150
2023-06-30 16:59:35,364 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] <==      Total: 1
2023-06-30 16:59:35,366 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] ==>  Preparing: INSERT INTO cart(order_id, pizza_id, pizza_size, quantity,cart_amount) VALUES(?, ?, ?, ?,?)
2023-06-30 16:59:35,367 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] ==> Parameters: 2(Integer), 1(Integer), MEDIUM(String), 1(Integer), 150(Integer)
2023-06-30 16:59:35,375 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] <==    Updates: 1
2023-06-30 16:59:35,376 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] ==>  Preparing: SELECT price_regular FROM pizza WHERE pizza_id = ?
2023-06-30 16:59:35,377 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] ==> Parameters: 2(Integer)
2023-06-30 16:59:35,380 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] <==    Columns: price_regular
2023-06-30 16:59:35,380 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] <==        Row: 200
2023-06-30 16:59:35,381 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] <==      Total: 1
2023-06-30 16:59:35,382 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] ==>  Preparing: INSERT INTO cart(order_id, pizza_id, pizza_size, quantity,cart_amount) VALUES(?, ?, ?, ?,?)
2023-06-30 16:59:35,384 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] ==> Parameters: 2(Integer), 2(Integer), REGULAR(String), 1(Integer), 200(Integer)
2023-06-30 16:59:35,393 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] <==    Updates: 1
2023-06-30 16:59:35,394 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] ==>  Preparing: UPDATE orders SET order_amount=? WHERE order_id=?
2023-06-30 16:59:35,396 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] ==> Parameters: 350(Integer), 2(Integer)
2023-06-30 16:59:35,402 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-7] <==    Updates: 1
2023-06-30 16:59:40,238 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-9] ==>  Preparing: SELECT * FROM orders
2023-06-30 16:59:40,239 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-9] ==> Parameters: 
2023-06-30 16:59:40,245 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-9] <==    Columns: order_id, customer_id, order_amount, order_date, address
2023-06-30 16:59:40,248 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-9] <==        Row: 1, 1, 900, 2023-06-30 16:55:53, Manjari-pune
2023-06-30 16:59:40,250 TRACE org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-9] <==        Row: 2, 1, 350, 2023-06-30 16:59:35, Manjari-pune
2023-06-30 16:59:40,252 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger [http-nio-8080-exec-9] <==      Total: 2
